# non ssl redirect to https://www. in case subdomain is not specified
server {
    listen 8080;
    server_name ~^(?<domain>[a-z0-9-]+)\.(?<tld>[a-z]+)(?<local>(|\.localhost))$;

    location / {
        return 301 https://www.$domain.$tld$local$request_uri;
    }
}

# non ssl redirect to https://
server {
    listen 8080;
    server_name ~^(?<subdomain>[a-z]+)\.(?<domain>[a-z0-9-]+)\.(?<tld>[a-z]+)(?<local>(|\.localhost))$;

    location / {
        return 301 https://$subdomain.$domain.$tld$local$request_uri;
    }
}

# ssl redirect to https://www. in case subdomain is not specified
server {
    listen 8443 ssl;
    server_name ~^(?<domain>[a-z0-9-]+)\.(?<tld>[a-z]+)(?<local>(|\.localhost))$;

    ssl_certificate /etc/customssl/live/fullchain.pem;
    ssl_certificate_key /etc/customssl/live/privkey.pem;

    location / {
        return 301 https://www.$domain.$tld$local$request_uri;
    }
}

# ssl default server
server {
    listen 8443 ssl default_server;
    server_name _;

    ssl_certificate /etc/customssl/live/fullchain.pem;
    ssl_certificate_key /etc/customssl/live/privkey.pem;

    location / {
        deny all;
    }
}

# server for api domains pointed to this nginx instance
server {
    listen 8443 ssl;
    server_name ~^(?<subdomain>(api))\.(?<domain>[a-z0-9-]+)\.(?<tld>[a-z]+)(?<local>(|\.localhost))$;

    ssl_certificate /etc/customssl/live/fullchain.pem;
    ssl_certificate_key /etc/customssl/live/privkey.pem;
    ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    root /var/www/html/public;
    error_page 500 502 503 504 /error.html;

    real_ip_header X-Forwarded-For;
    set_real_ip_from 192.168.0.0/16;

    location ~ /\. {
        try_files /dev/null @deny;
    }

    location ~ /\.py {
        try_files /dev/null @deny;
    }

    location /nginxhealth {
        add_header Content-Type application/json;
        return 200 '{"app":"api-dev-nginx","status":"ok","server":"$subdomain.$domain.$tld$local","http_host":"$http_host","scheme":"$scheme"}';
    }

    location /error.html {
        root /usr/share/nginx/html;
        internal;
    }

    location ~ ^/(.*)\.(jpg|png|svg|css|js|txt|pdf|ico|woff|woff2|mp3|mp4|wav)$ {
        limit_req zone=assets_rate_limit burst=200 nodelay;
        expires 1d;
        try_files /assets/$subdomain-$domain-$tld$uri @application_assets;
    }

    location / {
        try_files /dev/null @application;
    }

    location @application {
        resolver ${NGINX_LOCATION_RESOLVER};

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Host $http_host;
        proxy_pass http://$subdomain-$domain-$tld${NGINX_SERVICE_NAME_FQDN_ADDITION}:8000;
    }

    location @application_assets {
        resolver ${NGINX_LOCATION_RESOLVER};

        proxy_set_header Host $http_host;
        proxy_pass http://$subdomain-$domain-$tld${NGINX_SERVICE_NAME_FQDN_ADDITION}:8000;
    }

    location @deny {
        deny all;
    }
}

# server for react app pointed to this nginx instance
server {
    listen 8443 ssl;
    server_name ~^(?<subdomain>(www))\.(?<domain>[a-z0-9-]+)\.(?<tld>[a-z]+)(?<local>(|\.localhost))$;

    ssl_certificate /etc/customssl/live/fullchain.pem;
    ssl_certificate_key /etc/customssl/live/privkey.pem;
    ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    root /var/www/html/public;
    error_page 500 502 503 504 /error.html;

    real_ip_header X-Forwarded-For;
    set_real_ip_from 192.168.0.0/16;

    location ~ /\. {
        try_files /dev/null @deny;
    }

    location /nginxhealth {
        add_header Content-Type application/json;
        return 200 '{"app":"www-dev-nginx","status":"ok","server":"$subdomain.$domain.$tld$local"}';
    }

    location /error.html {
        root /usr/share/nginx/html;
        internal;
    }

    location /sockjs-node {
        resolver ${NGINX_LOCATION_RESOLVER};

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://$subdomain-$domain-$tld${NGINX_SERVICE_NAME_FQDN_ADDITION}:3000;
    }

    location / {
        try_files /dev/null @application;
    }

    location @application {
        resolver ${NGINX_LOCATION_RESOLVER};

        proxy_pass http://$subdomain-$domain-$tld${NGINX_SERVICE_NAME_FQDN_ADDITION}:3000;
    }
}
